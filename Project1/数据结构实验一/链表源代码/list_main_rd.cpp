#include <iostream>
#include "list_rd.h"

using std::cin;
using std::cout;
using std::endl;

int main()
{
	List lst;
	//用随机函数生成10个3位整数(100~999)，把这些整数存于链表中
	lst.AddThreeRandomNum();
	//输出链表
	lst.showList();

	cout << "---------------------------------------------------------------------" << endl;
	//读入一个整数，以及要插入的位置，把该整数插入到链表中，输出链表的内容(要求判断输入的位置是否合理)
	lst.Insert(5, 28);
	//在第2个位置插入 6
	lst.Insert(1, 6);

	cout << "---------------------------------------------------------------------" << endl;
	//读入一个整数，查看该整数是否在表中，若在，输出其位置(首位置为1)
	//查找数据 3 和 6，不在函数返回-1，存在输出其位置 
	if (lst.find(3) == -1)
		cout << "数据 3 不在链表中" << endl;
	else
		cout << "在第" << lst.find(3) << "位置" << endl;
	if (lst.find(6) == -1)
		cout << "不在链表中" << endl;
	else
		cout << "数据 6 在第" << lst.find(6) << "位置" << endl;
	lst.showList();

	cout << "---------------------------------------------------------------------" << endl;
	//读入一个整数，若该整数在链表里，删除该整数，输出链表的内容
	//删除数值 99、6，如果链表中存在则删除，不存在则输出不存在
	lst.showList();
	lst.Delete_value(99);
	cout << "删除数值 6 后，";
	lst.Delete_value(6);

	cout << "---------------------------------------------------------------------" << endl;
	//把链表的内容翻转，输出链表的内容
	lst.AddThreeRandomNum();	//先加入几个随机数
	lst.showList();
	cout << "颠倒后" << endl;
	lst.reverse();

	cout << "---------------------------------------------------------------------" << endl;
	/*
	 *用随机函数生成10个3位整数(100~999)，
	 *把这些整数存于单链表中，然后读入一个
	 *整数，以该值为基准把单链表分割为两部。
	 *分，所有小于该值的结点排在大于或等于
	 *该值的结点之前
	*/
	cout << "以500作为分隔线" << endl;
	lst.sort_value(500);
	cout << "---------------------------------------------------------------------" << endl;
}